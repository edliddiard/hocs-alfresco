<?xml version="1.0" encoding="UTF-8"?>
<definitions xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:activiti="http://activiti.org/bpmn"
             xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI"
             xmlns:omgdc="http://www.omg.org/spec/DD/20100524/DC" xmlns:omgdi="http://www.omg.org/spec/DD/20100524/DI"
             xmlns:dc="http://www.omg.org/spec/DD/20100524/DC" xmlns:di="http://www.omg.org/spec/DD/20100524/DI"
             xmlns:tns="http://www.activiti.org/test" typeLanguage="http://www.w3.org/2001/XMLSchema"
             expressionLanguage="http://www.w3.org/1999/XPath" targetNamespace="http://www.activiti.org/test">
    <collaboration id="UKVI_BREF">
        <participant id="UKVI" name="UKVI BREF" processRef="ukvi_b_ref_process"/>
    </collaboration>
    <process id="ukvi_b_ref_process" name="UKVI BREF process" isExecutable="true" isClosed="false" processType="None">
        <laneSet>
            <lane id="Lane_1t96hy4" name="UKVI Case Creator Team">
                <flowNodeRef>startevent1</flowNodeRef>
                <flowNodeRef>CreateCase</flowNodeRef>
                <flowNodeRef>NRR</flowNodeRef>
                <flowNodeRef>OGD</flowNodeRef>
                <flowNodeRef>CreateCaseGateway</flowNodeRef>
                <flowNodeRef>OGDGateway</flowNodeRef>
                <flowNodeRef>endevent1</flowNodeRef>
                <flowNodeRef>NRRGateway</flowNodeRef>
            </lane>
            <lane id="Lane_03ltvlm" name="UKVI Regional MPAM Team">
                <flowNodeRef>InitialDraftTask</flowNodeRef>
                <flowNodeRef>QAReview</flowNodeRef>
                <flowNodeRef>Dispatch</flowNodeRef>
                <flowNodeRef>DraftGateway</flowNodeRef>
                <flowNodeRef>QAReviewGateway</flowNodeRef>
            </lane>
        </laneSet>
        <startEvent id="startevent1"/>
        <sequenceFlow id="Start" sourceRef="startevent1" targetRef="CreateCase"/>
        <userTask id="CreateCase" name="Create Case" activiti:formKey="wf:adhocTask">
            <extensionElements>
                <activiti:taskListener event="create"
                                       class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
                    <activiti:field name="script">
                        <activiti:string><![CDATA[logger.log("Starting workflow for new nodes:");
                            task.setVariableLocal('bpm_outcomePropertyName',qn.getQname('{http://cts-beta.homeoffice.gov.uk/model/content/1.0}draftResponse'));
                            execution.setVariable('bpm_outcomePropertyName',qn.getQname('{http://cts-beta.homeoffice.gov.uk/model/content/1.0}draftResponse'));
                            for (var i = 0; i < bpm_package.children.length; i++) {
                                execution.setVariable('bpm_case_id', bpm_package.children[i].nodeRef);
                                logger.log("ID: "+execution.getVariable('bpm_case_id')+" Sending to stage: Initial Case");
                                bpm_package.children[i].properties['cts:caseStatus'] = 'New';
                                if(execution.getVariable('cts_misallocated_case') != null) {
                                 bpm_package.children[i].properties['cts:caseTask'] = 'Misallocated';
                                } else {
                                 bpm_package.children[i].properties['cts:caseTask'] = 'Create case';
                                }
                                bpm_package.children[i].properties['cts:caseWorkflowStatus'] = '{"transitions":[{"label":"Reallocate","value":"Reallocate","manualAllocate":true,"allocateHeader":"Reallocate","colour":"green"},{"label":"Send to draft","value":"Next","manualAllocate":true,"allocateHeader":"Allocate for drafting","colour":"green"}],"mandatoryFields":[{"name":"channel","message":"Original channel in the Case details section must be populated"},{"name":"dateOfLetter","message":"Date of Letter in the Case details section must be populated"},{"name":"replyTo:member","message":"Member in the Reply to section must be populated", "expression":"notBlank(case.member) or form.correspondentIsMemberOfParliament !== 1"},{"name":"markupDecision","message":"Decision in the Mark up section must be populated"},{"name":"Allocate:markupUnit","message":"Answering Unit in the Markup section must be populated","expression":"notBlank(case.markupUnit) or case.markupDecision != \'Allocate to policy unit\'"},{"name":"Allocate:markupMinister","message":"Sign off Minister in the Mark up section must be populated","expression":"notBlank(case.markupUnit) or case.markupDecision != \'Allocate to policy unit\'"},{"name":"markupTeam","message":"Team in the Mark up section must be populated","expression":"notBlank(case.markupUnit) or case.markupDecision != \'Allocate to policy unit\'"},{"name":"ogdName","message":"Department Name in the Markup section must be populated","expression":"notBlank(case.ogdName) or case.markupDecision != \'Refer to OGD\'"}]}';
                                bpm_package.children[i].save();
                                execution.setVariable('bpm_reject_initial_create_user', bpm_package.children[i].properties['cts:assignedUser']);
                                execution.setVariable('bpm_reject_initial_create_team', bpm_package.children[i].properties['cts:assignedTeam']);
                                execution.setVariable('bpm_reject_initial_create_unit', bpm_package.children[i].properties['cts:assignedUnit']);
                            }]]>
                        </activiti:string>
                    </activiti:field>
                </activiti:taskListener>
                <activiti:taskListener event="complete"
                                       class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
                    <activiti:field name="script">
                        <activiti:string><![CDATA[for (var i = 0; i < bpm_package.children.length; i++) {
                            logger.log("ID: "+execution.getVariable('bpm_case_id')+" Exiting stage: Initial Case");
                            if (bpm_package.children[i].properties['cts:markupDecision'] == 'Refer to OGD') {
                                    logger.log("ID: "+execution.getVariable('bpm_case_id')+" Marked for: Other Government Department");
                                    execution.setVariable('bpm_outcome', 'CreateCaseToOGD');
                                    execution.setVariable('cts_ogd_original_status', 'CreateCase');
                                    execution.setVariable('cts_ogd_original_create_case_unit', bpm_package.children[i].properties['cts:assignedUnit']);
                                    execution.setVariable('cts_ogd_original_create_case_team', bpm_package.children[i].properties['cts:assignedTeam']);
                                    execution.setVariable('cts_ogd_original_create_case_user', bpm_package.children[i].properties['cts:assignedUser']);
                                } else if (bpm_package.children[i].properties['cts:markupDecision'] == 'No reply needed') {
                                    logger.log("ID: "+execution.getVariable('bpm_case_id')+" Marked for: No Response Required");
                                    execution.setVariable('bpm_outcome', 'CreateCaseToNRR');
                                    execution.setVariable('cts_nrr_original_status', 'CreateCase');
                                    execution.setVariable('cts_nrr_original_create_case_unit', bpm_package.children[i].properties['cts:assignedUnit']);
                                    execution.setVariable('cts_nrr_original_create_case_team', bpm_package.children[i].properties['cts:assignedTeam']);
                                    execution.setVariable('cts_nrr_original_create_case_user', bpm_package.children[i].properties['cts:assignedUser']);
                                } else {
                                    logger.log("ID: "+execution.getVariable('bpm_case_id')+" Marked for: Initial Draft");
                                    execution.setVariable('bpm_outcome', 'CreateCaseToDraft');
                                }
                            }]]>
                        </activiti:string>
                    </activiti:field>
                </activiti:taskListener>
            </extensionElements>
        </userTask>
        <sequenceFlow id="SendToCreateCaseGateway" sourceRef="CreateCase" targetRef="CreateCaseGateway"/>
        <exclusiveGateway id="CreateCaseGateway"/>
        <sequenceFlow id="SendToDraft" sourceRef="CreateCaseGateway" targetRef="InitialDraftTask">
            <conditionExpression xsi:type="tFormalExpression">
                <![CDATA[${(bpm_outcome == 'CreateCaseToDraft')}]]></conditionExpression>
        </sequenceFlow>
        <sequenceFlow id="SendCreateCaseToNRR" sourceRef="CreateCaseGateway" targetRef="NRR">
            <conditionExpression xsi:type="tFormalExpression">
                <![CDATA[${(bpm_outcome == 'CreateCaseToNRR')}]]></conditionExpression>
        </sequenceFlow>
        <sequenceFlow id="SendCreateCaseToOGD" sourceRef="CreateCaseGateway" targetRef="OGD">
            <conditionExpression xsi:type="tFormalExpression">
                <![CDATA[${(bpm_outcome == 'CreateCaseToOGD')}]]></conditionExpression>
        </sequenceFlow>
        <userTask id="InitialDraftTask" name="Initial Draft" activiti:formKey="wf:activitiReviewTask">
            <extensionElements>
                <activiti:taskListener event="create"
                                       class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
                    <activiti:field name="runAs">
                        <activiti:string><![CDATA[admin]]></activiti:string>
                    </activiti:field>
                    <activiti:field name="script">
                        <activiti:string><![CDATA[logger.log("ID: "+execution.getVariable('bpm_case_id')+" Sending to stage: Initial Draft");
                            task.setVariableLocal('bpm_outcomePropertyName',qn.getQname('{http://cts-beta.homeoffice.gov.uk/model/content/1.0}draftResponse'));
                            execution.setVariable('bpm_outcomePropertyName',qn.getQname('{http://cts-beta.homeoffice.gov.uk/model/content/1.0}draftResponse'));
                            for (var i = 0; i < bpm_package.children.length; i++) {
                                bpm_package.children[i].properties['cts:caseStatus'] = 'Draft';
                                if (bpm_package.children[i].properties['cts:caseTask'] != 'Amend response') {
                                    bpm_package.children[i].properties['cts:caseTask'] = 'Draft response';
                                }
                                //set owner to admin so that users don't keep edit permissions
                                bpm_package.children[i].setOwner('admin');
                                bpm_package.children[i].properties['cts:caseWorkflowStatus'] = '{"transitions":[{"label":"Reallocate","value":"Reallocate","manualAllocate":true,"allocateHeader":"Reallocate","colour":"green"},{"label":"Submit for approval","value":"SendForQA","manualAllocate":true,"allocateHeader":"Allocate for QA review","colour":"green"},{"label":"Reject","value":"Reject","manualAllocate":true,"allocateHeader":"Reject","colour":"red"},{"label":"Send to dispatch","value":"SendToDispatch","manualAllocate":false,"allocateHeader":"SendToDispatch","colour":"green"}],"mandatoryFields":[{"name":"markupTopic","message":"Topic must be populated"},{"name":"hmpoResponse","message":"Response channel must be populated"}]}';
                                bpm_package.children[i].save();
                                execution.setVariable('bpm_reject_initial_draft_user', bpm_package.children[i].properties['cts:assignedUser']);
                                execution.setVariable('bpm_reject_initial_draft_team', bpm_package.children[i].properties['cts:assignedTeam']);
                                execution.setVariable('bpm_reject_initial_draft_unit', bpm_package.children[i].properties['cts:assignedUnit']);
                            }]]>
                        </activiti:string>
                    </activiti:field>
                </activiti:taskListener>
                <activiti:taskListener event="complete"
                                       class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
                    <activiti:field name="script">
                        <activiti:string><![CDATA[for (var i = 0; i < bpm_package.children.length; i++) {
                            logger.log("ID: "+execution.getVariable('bpm_case_id')+" Exiting stage: Initial Draft");
                            if (task.getVariableLocal('cts_draftResponse') == 'Reject'){
                                logger.log("ID: "+execution.getVariable('bpm_case_id')+" Marked for: Return to Initial Case");
                                execution.setVariable('cts_misallocated_case','true')
                                execution.setVariable('bpm_outcome', 'Return');
                                bpm_package.children[i].properties['cts:assignedUnit'] = execution.getVariable('bpm_reject_initial_create_unit');
                                bpm_package.children[i].properties['cts:assignedTeam'] = execution.getVariable('bpm_reject_initial_create_team');
                                bpm_package.children[i].properties['cts:assignedUser'] = execution.getVariable('bpm_reject_initial_create_user');
                            } else if (task.getVariableLocal('cts_draftResponse') == 'SendToDispatch'){
                                logger.log("Send InitialDraft to dispatch state");
                                execution.setVariable('bpm_outcome', 'SendForDispatch');
                                bpm_package.children[i].properties['cts:caseStatus'] = 'Dispatch';
                                bpm_package.children[i].properties['cts:caseTask'] = 'Dispatch response';
                                bpm_package.children[i].properties['cts:assignedUnit'] = execution.getVariable('bpm_reject_initial_draft_unit');
                                bpm_package.children[i].properties['cts:assignedTeam'] = execution.getVariable('bpm_reject_initial_draft_team');
                                bpm_package.children[i].properties['cts:assignedUser'] = null;
                                bpm_package.children[i].save();
                            } else {
                               logger.log("ID: "+execution.getVariable('bpm_case_id')+" Marked for: QA Response");
                               execution.setVariable('bpm_outcome', 'SendInitialDraftForQaReview');
                            }
                            }]]>
                        </activiti:string>
                    </activiti:field>
                </activiti:taskListener>
            </extensionElements>
        </userTask>
        <sequenceFlow id="SendToDraftGateway" sourceRef="InitialDraftTask" targetRef="DraftGateway"/>
        <exclusiveGateway id="DraftGateway"/>
        <sequenceFlow id="SendInitialDraftToDispatch" sourceRef="DraftGateway" targetRef="Dispatch">
            <conditionExpression xsi:type="tFormalExpression">
                <![CDATA[${(bpm_outcome == 'SendForDispatch')}]]></conditionExpression>
        </sequenceFlow>
        <sequenceFlow id="ReturnDraftToCreateCase" name="Reject" sourceRef="DraftGateway"
                      targetRef="CreateCase">
            <conditionExpression xsi:type="tFormalExpression">
                <![CDATA[${(bpm_outcome == 'Return')}]]></conditionExpression>
        </sequenceFlow>
        <sequenceFlow id="SendToQAReview" sourceRef="DraftGateway" targetRef="QAReview">
            <conditionExpression xsi:type="tFormalExpression">
                <![CDATA[${(bpm_outcome == 'SendInitialDraftForQaReview')}]]></conditionExpression>
        </sequenceFlow>
        <userTask id="QAReview" name="QA Case" activiti:formKey="wf:adhocTask">
            <extensionElements>
                <activiti:taskListener event="create" class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
                    <activiti:field name="runAs">
                        <activiti:string><![CDATA[admin]]></activiti:string>
                    </activiti:field>
                    <activiti:field name="script">
                        <activiti:string><![CDATA[logger.log("ID: "+execution.getVariable('bpm_case_id')+" Sending to stage: QA Response");
                            task.setVariableLocal('bpm_outcomePropertyName',qn.getQname('{http://cts-beta.homeoffice.gov.uk/model/content/1.0}draftResponse'));
                            execution.setVariable('bpm_outcomePropertyName',qn.getQname('{http://cts-beta.homeoffice.gov.uk/model/content/1.0}draftResponse'));
                            for (var i = 0; i < bpm_package.children.length; i++) {
                                bpm_package.children[i].properties['cts:caseStatus'] = 'Draft';
                                bpm_package.children[i].properties['cts:caseTask'] = 'QA review';
                                //set owner to admin so that users don't keep edit permissions
                                bpm_package.children[i].setOwner('admin');
                                bpm_package.children[i].properties['cts:caseWorkflowStatus'] = '{"transitions":[{"label":"Reallocate","value": "Reallocate","manualAllocate": true,"allocateHeader": "Reallocate","colour": "green"},{"label":"Approve","value": "SendForDispatch","manualAllocate": false,"allocateHeader": "Allocate for Dispatch","colour": "green"},{"label":"Return","value": "Reject","manualAllocate": false,"allocateHeader": "Reallocate for drafter","colour": "red"}]}';
                                bpm_package.children[i].save();
                                execution.setVariable('bpm_initial_qa_unit', bpm_package.children[i].properties['cts:assignedUnit']);
                                execution.setVariable('bpm_initial_qa_team', bpm_package.children[i].properties['cts:assignedTeam']);
                            }]]>
                        </activiti:string>
                    </activiti:field>
                </activiti:taskListener>
                <activiti:taskListener event="complete" class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
                    <activiti:field name="script">
                        <activiti:string><![CDATA[var approved = (task.getVariableLocal('cts_draftResponse') == 'SendForDispatch');
                            logger.log("ID: "+execution.getVariable('bpm_case_id')+" Exiting stage: QA Response");
                            if(approved){
                                logger.log("ID: "+execution.getVariable('bpm_case_id')+" Marked for: Dispatch");
                                execution.setVariable('bpm_outcome', 'SendForDispatch');
                                for (var i = 0; i < bpm_package.children.length; i++) {
                                  bpm_package.children[i].properties['cts:caseStatus'] = 'Dispatch';
                                  bpm_package.children[i].properties['cts:caseTask'] = 'Dispatch response';
                                  bpm_package.children[i].properties['cts:assignedUnit'] = execution.getVariable('bpm_initial_qa_unit');
                                  bpm_package.children[i].properties['cts:assignedTeam'] = execution.getVariable('bpm_initial_qa_team');
                                  bpm_package.children[i].properties['cts:assignedUser'] = execution.getVariable('bpm_initial_qa_team');
                                  bpm_package.children[i].save();
                                }
                            }else{
                                logger.log("ID: "+execution.getVariable('bpm_case_id')+" Marked for: Return to Initial Draft");
                                execution.setVariable('bpm_outcome', 'Return');
                                for (var i = 0; i < bpm_package.children.length; i++) {
                                    logger.log("Returning node to Draft response:" + bpm_package.children[i].nodeRef);
                                    bpm_package.children[i].properties['cts:caseStatus'] = 'Draft';
                                    bpm_package.children[i].properties['cts:caseTask'] = 'Amend response';
                                    bpm_package.children[i].properties['cts:assignedUnit'] = execution.getVariable('bpm_reject_initial_draft_unit');
                                    bpm_package.children[i].properties['cts:assignedTeam'] = execution.getVariable('bpm_reject_initial_draft_team');
                                    bpm_package.children[i].properties['cts:assignedUser'] = execution.getVariable('bpm_reject_initial_draft_user');
                                    bpm_package.children[i].save();
                                }
                            }]]>
                        </activiti:string>
                    </activiti:field>
                </activiti:taskListener>
            </extensionElements>
        </userTask>
        <sequenceFlow id="SendToQAReviewGateway" sourceRef="QAReview" targetRef="QAReviewGateway"/>
        <exclusiveGateway id="QAReviewGateway"/>
        <sequenceFlow id="ReturnQAReviewToDraft" name="Reject" sourceRef="QAReviewGateway"
                      targetRef="InitialDraftTask">
            <conditionExpression xsi:type="tFormalExpression">
                <![CDATA[${(bpm_outcome == 'Return')}]]></conditionExpression>
        </sequenceFlow>
        <sequenceFlow id="SendToDispatch" sourceRef="QAReviewGateway" targetRef="Dispatch">
            <conditionExpression xsi:type="tFormalExpression">
                <![CDATA[${(bpm_outcome == 'SendForDispatch')}]]></conditionExpression>
        </sequenceFlow>
        <userTask id="Dispatch" name="Dispatch" activiti:formKey="wf:adhocTask">
            <extensionElements>
                <activiti:taskListener event="create" class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
                    <activiti:field name="runAs">
                        <activiti:string><![CDATA[admin]]></activiti:string>
                    </activiti:field>
                    <activiti:field name="script">
                        <activiti:string><![CDATA[logger.log("ID: "+execution.getVariable('bpm_case_id')+" Sending to stage: Dispatch");
                            task.setVariableLocal('bpm_outcomePropertyName',qn.getQname('{http://cts-beta.homeoffice.gov.uk/model/content/1.0}draftResponse'));
                            execution.setVariable('bpm_outcomePropertyName',qn.getQname('{http://cts-beta.homeoffice.gov.uk/model/content/1.0}draftResponse'));
                            for (var i = 0; i < bpm_package.children.length; i++) {
                                logger.log("Draft node:" + bpm_package.children[i].nodeRef);
                                //set owner to admin so that users don't keep edit permissions
                                bpm_package.children[i].setOwner('admin');
                                bpm_package.children[i].properties['cts:caseWorkflowStatus'] = '{"transitions":[{"label":"Reallocate","value": "Reallocate","manualAllocate": true,"allocateHeader": "Reallocate","colour": "green"},{"label":"Dispatched","value": "Next","manualAllocate": false, "allocateHeader": "","colour": "green"},{"label":"Return","value": "Reject","manualAllocate": false,"allocateHeader": "Rellocate for drafting","colour": "red"}]}';
                                bpm_package.children[i].save();
                            }]]>
                        </activiti:string>
                    </activiti:field>
                </activiti:taskListener>
                <activiti:taskListener event="complete" class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
                    <activiti:field name="runAs">
                        <activiti:string><![CDATA[admin]]></activiti:string>
                    </activiti:field>
                    <activiti:field name="script">
                        <activiti:string><![CDATA[for (var i = 0; i < bpm_package.children.length; i++) {
                                 logger.log("Completing node:" + bpm_package.children[i].nodeRef);
                                 bpm_package.children[i].properties['cts:caseStatus'] = 'Completed';
                                 bpm_package.children[i].properties['cts:caseTask'] = 'None';
                                 bpm_package.children[i].properties['cts:assignedUser'] = null;
                                 bpm_package.children[i].properties['cts:assignedTeam'] = null;
                                 bpm_package.children[i].properties['cts:assignedUnit'] = null;
                                 bpm_package.children[i].properties['cts:caseWorkflowStatus'] = null;
                                 bpm_package.children[i].save();
                            }]]>
                        </activiti:string>
                    </activiti:field>
                </activiti:taskListener>
            </extensionElements>
        </userTask>
        <sequenceFlow id="SendToComplete" sourceRef="Dispatch" targetRef="endevent1"/>
        <userTask id="NRR" name="No Response Required" activiti:formKey="wf:adhocTask">
            <extensionElements>
                <activiti:taskListener event="create" class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
                    <activiti:field name="runAs">
                        <activiti:string><![CDATA[admin]]></activiti:string>
                    </activiti:field>
                    <activiti:field name="script">
                        <activiti:string>
                            <![CDATA[logger.log("ID: "+execution.getVariable('bpm_case_id')+" Sending to stage: No Response Required");
                            task.setVariableLocal('bpm_outcomePropertyName',qn.getQname('{http://cts-beta.homeoffice.gov.uk/model/content/1.0}draftResponse'));
                            execution.setVariable('bpm_outcomePropertyName',qn.getQname('{http://cts-beta.homeoffice.gov.uk/model/content/1.0}draftResponse'));
                            for (var i = 0; i < bpm_package.children.length; i++) {
                                bpm_package.children[i].properties['cts:caseStatus'] = 'NFA';
                                bpm_package.children[i].properties['cts:caseTask'] = 'QA';
                                bpm_package.children[i].properties['cts:assignedUnit'] = 'GROUP_UKVI';
                                bpm_package.children[i].properties['cts:assignedTeam'] = 'GROUP_UKVI_CUSTOMER_CORRESPONDENCE_HUB';
                                bpm_package.children[i].properties['cts:assignedUser'] = null;
                                //set owner to admin so that users don't keep edit permissions
                                bpm_package.children[i].setOwner('admin');
                                bpm_package.children[i].properties['cts:caseWorkflowStatus'] = '{"transitions":[{"label":"Reallocate","value": "Reallocate","manualAllocate": true,"allocateHeader": "Reallocate","colour": "green"},{"label":"Approve","value": "ApproveNRR","manualAllocate": false, "allocateHeader": "","colour": "green"},{"label":"Return","value": "Reject","manualAllocate": false,"allocateHeader": "Return case","colour": "red"}]}';
                                bpm_package.children[i].save();
                            }]]>
                        </activiti:string>
                    </activiti:field>
                </activiti:taskListener>
                <activiti:taskListener event="complete" class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
                    <activiti:field name="script">
                        <activiti:string>
                            <![CDATA[var approved = (task.getVariableLocal('cts_draftResponse') == 'ApproveNRR');
                            logger.log("ID: "+execution.getVariable('bpm_case_id')+" Exiting stage: No Response Required");
                            if(approved){
                                logger.log("ID: "+execution.getVariable('bpm_case_id')+" Marked for: Completion");
                                for (var i = 0; i < bpm_package.children.length; i++) {
                                    execution.setVariable('bpm_outcome', 'Completed');
                                    bpm_package.children[i].properties['cts:caseStatus'] = 'Completed';
                                    bpm_package.children[i].properties['cts:caseTask'] = 'None';
                                    bpm_package.children[i].properties['cts:assignedUser'] = null;
                                    bpm_package.children[i].properties['cts:assignedTeam'] = null;
                                    bpm_package.children[i].properties['cts:assignedUnit'] = null;
                                    bpm_package.children[i].properties['cts:caseWorkflowStatus'] = null;
                                    bpm_package.children[i].save();
                                }
                            }else{
                                logger.log("ID: "+execution.getVariable('bpm_case_id')+" Marked for: Return to Initial Case");
                                for (var i = 0; i < bpm_package.children.length; i++) {
                                    execution.setVariable('bpm_outcome', 'Return');
                                    bpm_package.children[i].properties['cts:caseStatus'] = 'New';
                                    bpm_package.children[i].properties['cts:caseTask'] = 'Create case';
                                    bpm_package.children[i].properties['cts:assignedUnit'] = execution.getVariable('cts_nrr_original_create_case_unit');
                                    bpm_package.children[i].properties['cts:assignedTeam'] = execution.getVariable('cts_nrr_original_create_case_team');
                                    bpm_package.children[i].properties['cts:assignedUser'] = execution.getVariable('cts_nrr_original_create_case_user');
                                    bpm_package.children[i].properties['cts:markupDecision'] = null;
                                }
                            }]]>
                        </activiti:string>
                    </activiti:field>
                </activiti:taskListener>
            </extensionElements>
        </userTask>
        <sequenceFlow id="SendToNRRGateway" sourceRef="NRR" targetRef="NRRGateway"/>
        <exclusiveGateway id="NRRGateway"/>
        <sequenceFlow id="ReturnNRRToCreateCase" name="Reject" sourceRef="NRRGateway"
                      targetRef="CreateCase">
            <conditionExpression xsi:type="tFormalExpression">
                <![CDATA[${(bpm_outcome == 'Return')}]]></conditionExpression>
        </sequenceFlow>
        <sequenceFlow id="SendNRRToComplete" sourceRef="NRRGateway" targetRef="endevent1">
            <conditionExpression xsi:type="tFormalExpression">
                <![CDATA[${(bpm_outcome == 'Completed')}]]></conditionExpression>
        </sequenceFlow>
        <userTask id="OGD" name="Other Government Department" activiti:formKey="wf:adhocTask">
            <extensionElements>
                <activiti:taskListener event="create" class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
                    <activiti:field name="runAs">
                        <activiti:string><![CDATA[admin]]></activiti:string>
                    </activiti:field>
                    <activiti:field name="script">
                        <activiti:string>
                            <![CDATA[logger.log("ID: "+execution.getVariable('bpm_case_id')+" Sending to stage: Other Government Department");
                            task.setVariableLocal('bpm_outcomePropertyName',qn.getQname('{http://cts-beta.homeoffice.gov.uk/model/content/1.0}draftResponse'));
                            execution.setVariable('bpm_outcomePropertyName',qn.getQname('{http://cts-beta.homeoffice.gov.uk/model/content/1.0}draftResponse'));
                            for (var i = 0; i < bpm_package.children.length; i++) {
                                bpm_package.children[i].properties['cts:caseStatus'] = 'OGD';
                                bpm_package.children[i].properties['cts:caseTask'] = 'Transfer';
                                bpm_package.children[i].properties['cts:assignedUnit'] = 'GROUP_UKVI';
                                bpm_package.children[i].properties['cts:assignedTeam'] = 'GROUP_UKVI_CUSTOMER_CORRESPONDENCE_HUB';
                                bpm_package.children[i].properties['cts:assignedUser'] = null;
                                //set owner to admin so that users don't keep edit permissions
                                bpm_package.children[i].setOwner('admin');
                                bpm_package.children[i].properties['cts:caseWorkflowStatus'] = '{"transitions":[{"label":"Reallocate","value": "Reallocate","manualAllocate": true,"allocateHeader": "Reallocate","colour": "green"},{"label":"Transferred","value": "ApproveNRR","manualAllocate": false, "allocateHeader": "","colour": "green"},{"label":"Return","value": "Reject","manualAllocate": false,"allocateHeader": "Return case","colour": "red"}]}';
                                bpm_package.children[i].save();
                            }]]>
                        </activiti:string>
                    </activiti:field>
                </activiti:taskListener>
                <activiti:taskListener event="complete" class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
                    <activiti:field name="script">
                        <activiti:string>
                            <![CDATA[var approved = (task.getVariableLocal('cts_draftResponse') == 'ApproveNRR');
                            logger.log("ID: "+execution.getVariable('bpm_case_id')+" Exiting stage: Other Government Department");
                            if(approved){
                                logger.log("ID: "+execution.getVariable('bpm_case_id')+" Marked for: Completion");
                                for (var i = 0; i < bpm_package.children.length; i++) {
                                    execution.setVariable('bpm_outcome', 'Completed');
                                    bpm_package.children[i].properties['cts:caseStatus'] = 'Completed';
                                    bpm_package.children[i].properties['cts:caseTask'] = 'None';
                                    bpm_package.children[i].properties['cts:assignedUser'] = null;
                                    bpm_package.children[i].properties['cts:assignedTeam'] = null;
                                    bpm_package.children[i].properties['cts:assignedUnit'] = null;
                                    bpm_package.children[i].properties['cts:caseWorkflowStatus'] = null;
                                    bpm_package.children[i].save();
                                }
                            }else{
                                logger.log("ID: "+execution.getVariable('bpm_case_id')+" Marked for: Return to Initial Case");
                                for (var i = 0; i < bpm_package.children.length; i++) {
                                    execution.setVariable('bpm_outcome', 'Return');
                                    bpm_package.children[i].properties['cts:caseStatus'] = 'New';
                                    bpm_package.children[i].properties['cts:caseTask'] = 'Create Case';
                                    bpm_package.children[i].properties['cts:assignedUnit'] = execution.getVariable('cts_ogd_original_create_case_unit');
                                    bpm_package.children[i].properties['cts:assignedTeam'] = execution.getVariable('cts_ogd_original_create_case_team');
                                    bpm_package.children[i].properties['cts:assignedUser'] = execution.getVariable('cts_ogd_original_create_case_user');
                                    bpm_package.children[i].properties['cts:markupDecision'] = null;
                                }
                            }]]>
                        </activiti:string>
                    </activiti:field>
                </activiti:taskListener>
            </extensionElements>
        </userTask>
        <sequenceFlow id="SendToOGDGateway" sourceRef="OGD" targetRef="OGDGateway"/>
        <exclusiveGateway id="OGDGateway"/>
        <sequenceFlow id="ReturnOGDToCreateCase" sourceRef="OGDGateway" targetRef="CreateCase">
            <conditionExpression xsi:type="tFormalExpression">
                <![CDATA[${(bpm_outcome == 'Return')}]]></conditionExpression>
        </sequenceFlow>
        <sequenceFlow id="SendOGDToComplete" sourceRef="OGDGateway" targetRef="endevent1">
            <conditionExpression xsi:type="tFormalExpression">
                <![CDATA[${(bpm_outcome == 'Completed')}]]></conditionExpression>
        </sequenceFlow>
        <endEvent id="endevent1"/>
    </process>
    <bpmndi:BPMNDiagram id="BPMNDiagram_1">
        <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="UKVI_BREF">
            <bpmndi:BPMNShape id="UKVI_di" bpmnElement="UKVI">
                <dc:Bounds x="93" y="-111" width="1101" height="677" />
            </bpmndi:BPMNShape>
            <bpmndi:BPMNShape id="_BPMNShape_StartEvent_2" bpmnElement="startevent1">
                <dc:Bounds x="173" y="102" width="36" height="36"/>
                <bpmndi:BPMNLabel>
                    <dc:Bounds x="146" y="138" width="90" height="20"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNShape id="CreateCase_di" bpmnElement="CreateCase">
                <dc:Bounds x="286" y="80" width="100" height="80"/>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNShape id="CreateCaseGateway_di" bpmnElement="CreateCaseGateway"
                              isMarkerVisible="true">
                <dc:Bounds x="481" y="95" width="50" height="50"/>
                <bpmndi:BPMNLabel>
                    <dc:Bounds x="506" y="148" width="0" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNShape id="InitialDraftTask_di" bpmnElement="InitialDraftTask">
                <dc:Bounds x="456" y="209" width="100" height="80"/>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNShape id="DraftGateway_di" bpmnElement="DraftGateway"
                              isMarkerVisible="true">
                <dc:Bounds x="481" y="327" width="50" height="50"/>
                <bpmndi:BPMNLabel>
                    <dc:Bounds x="506" y="380" width="0" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNShape id="QAReview_di" bpmnElement="QAReview">
                <dc:Bounds x="592" y="430" width="100" height="80"/>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNShape id="QAReviewGateway_di" bpmnElement="QAReviewGateway"
                              isMarkerVisible="true">
                <dc:Bounds x="816" y="445" width="50" height="50"/>
                <bpmndi:BPMNLabel>
                    <dc:Bounds x="841" y="498" width="0" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNShape id="Dispatch_di" bpmnElement="Dispatch">
                <dc:Bounds x="992" y="430" width="100" height="80"/>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNShape id="NRR_di" bpmnElement="NRR">
                <dc:Bounds x="816" y="80" width="100" height="80"/>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNShape id="OGD_di" bpmnElement="OGD">
                <dc:Bounds x="816" y="-44.463359639233374" width="100" height="80"/>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNShape id="OGDGateway_di" bpmnElement="OGDGateway"
                              isMarkerVisible="true">
                <dc:Bounds x="945.3596392333709" y="-29" width="50" height="50"/>
                <bpmndi:BPMNLabel>
                    <dc:Bounds x="970.3596392333709" y="24" width="0" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNShape id="endevent1_di" bpmnElement="endevent1">
                <dc:Bounds x="1136.359639233371" y="102" width="36" height="36"/>
                <bpmndi:BPMNLabel>
                    <dc:Bounds x="1154.359639233371" y="141" width="0" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNShape id="NRRGateway_di" bpmnElement="NRRGateway"
                              isMarkerVisible="true">
                <dc:Bounds x="999.3596392333709" y="95" width="50" height="50"/>
                <bpmndi:BPMNLabel>
                    <dc:Bounds x="1024.359639233371" y="148" width="0" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNEdge id="Start_di" bpmnElement="Start">
                <di:waypoint xsi:type="dc:Point" x="209" y="120"/>
                <di:waypoint xsi:type="dc:Point" x="254" y="120"/>
                <di:waypoint xsi:type="dc:Point" x="254" y="120"/>
                <di:waypoint xsi:type="dc:Point" x="286" y="120"/>
                <bpmndi:BPMNLabel>
                    <dc:Bounds x="269" y="113.5" width="0" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNEdge id="ReturnOGDToCreateCase_di" bpmnElement="ReturnOGDToCreateCase">
                <di:waypoint xsi:type="dc:Point" x="970" y="-29"/>
                <di:waypoint xsi:type="dc:Point" x="970" y="-70"/>
                <di:waypoint xsi:type="dc:Point" x="336" y="-70"/>
                <di:waypoint xsi:type="dc:Point" x="336" y="80"/>
                <bpmndi:BPMNLabel>
                    <dc:Bounds x="653" y="-91.5" width="0" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNEdge id="ReturnNRRToCreateCase_di" bpmnElement="ReturnNRRToCreateCase">
                <di:waypoint xsi:type="dc:Point" x="1024" y="95"/>
                <di:waypoint xsi:type="dc:Point" x="1024" y="-70"/>
                <di:waypoint xsi:type="dc:Point" x="336" y="-70"/>
                <di:waypoint xsi:type="dc:Point" x="336" y="80"/>
                <bpmndi:BPMNLabel>
                    <dc:Bounds x="664" y="-91" width="32" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNEdge id="ReturnDraftToCreateCase_di" bpmnElement="ReturnDraftToCreateCase">
                <di:waypoint xsi:type="dc:Point" x="481" y="352"/>
                <di:waypoint xsi:type="dc:Point" x="336" y="352"/>
                <di:waypoint xsi:type="dc:Point" x="336" y="160"/>
                <bpmndi:BPMNLabel>
                    <dc:Bounds x="393" y="331" width="32" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNEdge id="SendToCreateCaseGateway_di" bpmnElement="SendToCreateCaseGateway">
                <di:waypoint xsi:type="dc:Point" x="386" y="120"/>
                <di:waypoint xsi:type="dc:Point" x="481" y="120"/>
                <bpmndi:BPMNLabel>
                    <dc:Bounds x="433.5" y="98" width="0" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNEdge id="SendToDraft_di" bpmnElement="SendToDraft">
                <di:waypoint xsi:type="dc:Point" x="506" y="145"/>
                <di:waypoint xsi:type="dc:Point" x="506" y="209"/>
                <bpmndi:BPMNLabel>
                    <dc:Bounds x="521" y="170" width="0" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNEdge id="SendCreateCaseToNRR_di" bpmnElement="SendCreateCaseToNRR">
                <di:waypoint xsi:type="dc:Point" x="531" y="120"/>
                <di:waypoint xsi:type="dc:Point" x="816" y="120"/>
                <bpmndi:BPMNLabel>
                    <dc:Bounds x="673.5" y="98" width="0" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNEdge id="SendCreateCaseToOGD_di" bpmnElement="SendCreateCaseToOGD">
                <di:waypoint xsi:type="dc:Point" x="506" y="95"/>
                <di:waypoint xsi:type="dc:Point" x="506" y="-4"/>
                <di:waypoint xsi:type="dc:Point" x="816" y="-4"/>
                <bpmndi:BPMNLabel>
                    <dc:Bounds x="521" y="38.5" width="0" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNEdge id="ReturnQAReviewToDraft_di" bpmnElement="ReturnQAReviewToDraft">
                <di:waypoint xsi:type="dc:Point" x="841" y="445"/>
                <di:waypoint xsi:type="dc:Point" x="841" y="249"/>
                <di:waypoint xsi:type="dc:Point" x="556" y="249"/>
                <bpmndi:BPMNLabel>
                    <dc:Bounds x="676" y="226" width="32" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNEdge id="SendToDraftGateway_di" bpmnElement="SendToDraftGateway">
                <di:waypoint xsi:type="dc:Point" x="506" y="289"/>
                <di:waypoint xsi:type="dc:Point" x="506" y="327"/>
                <bpmndi:BPMNLabel>
                    <dc:Bounds x="521" y="301.5" width="0" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNEdge id="SendToQAReview_di" bpmnElement="SendToQAReview">
                <di:waypoint xsi:type="dc:Point" x="531" y="352" />
                <di:waypoint xsi:type="dc:Point" x="642" y="352" />
                <di:waypoint xsi:type="dc:Point" x="642" y="430" />
                <bpmndi:BPMNLabel>
                    <dc:Bounds x="586.5" y="330.5" width="0" height="13" />
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNEdge id="SendToQAReviewGateway_di" bpmnElement="SendToQAReviewGateway">
                <di:waypoint xsi:type="dc:Point" x="692" y="470"/>
                <di:waypoint xsi:type="dc:Point" x="816" y="470"/>
                <bpmndi:BPMNLabel>
                    <dc:Bounds x="754" y="448" width="0" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNEdge id="SendToDispatch_di" bpmnElement="SendToDispatch">
                <di:waypoint xsi:type="dc:Point" x="866" y="470"/>
                <di:waypoint xsi:type="dc:Point" x="992" y="470"/>
                <bpmndi:BPMNLabel>
                    <dc:Bounds x="929" y="448.5" width="0" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNEdge id="SendToComplete_di" bpmnElement="SendToComplete">
                <di:waypoint xsi:type="dc:Point" x="1092" y="470"/>
                <di:waypoint xsi:type="dc:Point" x="1154" y="470"/>
                <di:waypoint xsi:type="dc:Point" x="1154" y="138"/>
                <bpmndi:BPMNLabel>
                    <dc:Bounds x="1123" y="448.5" width="0" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNEdge id="SendToNRRGateway_di" bpmnElement="SendToNRRGateway">
                <di:waypoint xsi:type="dc:Point" x="916" y="120"/>
                <di:waypoint xsi:type="dc:Point" x="999" y="120"/>
                <bpmndi:BPMNLabel>
                    <dc:Bounds x="957.5" y="98.5" width="0" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNEdge id="SendToOGDGateway_di" bpmnElement="SendToOGDGateway">
                <di:waypoint xsi:type="dc:Point" x="916" y="-4"/>
                <di:waypoint xsi:type="dc:Point" x="945" y="-4"/>
                <bpmndi:BPMNLabel>
                    <dc:Bounds x="930.5" y="-26" width="0" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNEdge id="SendOGDToComplete_di" bpmnElement="SendOGDToComplete">
                <di:waypoint xsi:type="dc:Point" x="995" y="-4"/>
                <di:waypoint xsi:type="dc:Point" x="1154" y="-4"/>
                <di:waypoint xsi:type="dc:Point" x="1154" y="102"/>
                <bpmndi:BPMNLabel>
                    <dc:Bounds x="1074.5" y="-25.5" width="0" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNEdge id="SendNRRToComplete_di" bpmnElement="SendNRRToComplete">
                <di:waypoint xsi:type="dc:Point" x="1049" y="120"/>
                <di:waypoint xsi:type="dc:Point" x="1136" y="120"/>
                <bpmndi:BPMNLabel>
                    <dc:Bounds x="1092.5" y="98.5" width="0" height="13"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNShape id="Lane_1t96hy4_di" bpmnElement="Lane_1t96hy4">
                <dc:Bounds x="123" y="-111" width="1071" height="292"/>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNShape id="Lane_03ltvlm_di" bpmnElement="Lane_03ltvlm">
                <dc:Bounds x="123" y="181" width="1071" height="385" />
            </bpmndi:BPMNShape>
            <bpmndi:BPMNEdge id="SendInitialDraftToDispatch_di" bpmnElement="SendInitialDraftToDispatch">
                <di:waypoint xsi:type="dc:Point" x="506" y="377" />
                <di:waypoint xsi:type="dc:Point" x="506" y="542" />
                <di:waypoint xsi:type="dc:Point" x="1042" y="542" />
                <di:waypoint xsi:type="dc:Point" x="1042" y="510" />
                <bpmndi:BPMNLabel>
                    <dc:Bounds x="774" y="520.5" width="0" height="13" />
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNEdge>
        </bpmndi:BPMNPlane>
    </bpmndi:BPMNDiagram>
</definitions>
